@model MovieTickets.ViewModels.ScreeningFormViewModel

@{
    ViewBag.Title = Model.PageTitle;
}

<h2>@Model.ScreeningStart</h2>

<section class="hero text-white py-4 flex-grow-1">
    <div class="container py-4">
        <div class="row">
            <h2 class="display-4 mb-5">@ViewBag.Title</h2>

            <div class="col-lg-6">
                @using (Html.BeginForm("SaveScreening", "Admin", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <h4>@Model.PageDesc</h4>
                    <hr />
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="form-group mt-3">
                        @Html.LabelFor(m => m.AuditoriumId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.AuditoriumId, new SelectList(Model.Auditoriums, "Id", "Name"), "", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group mt-3">
                        @Html.LabelFor(m => m.MovieId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.MovieId, new SelectList(Model.Movies, "Id", "Title"), "", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ScreeningStart, htmlAttributes: new { @class = "control-label col-md-2 mt-3 text-no-wrap" })
                        <div class="col-md-10">
                            <div class="input-group" id="datetimepicker">
                                <input name="screening_start" type="datetime-local" id="screening_start" class="form-control" />
                            </div>
                            @Html.ValidationMessageFor(model => model.ScreeningStart, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ScreeningEnd, htmlAttributes: new { @class = "control-label col-md-2 mt-3 text-no-wrap" })
                        <div class="col-md-10">
                            <div class="input-group" id="datetimepicker">
                                <input name="screening_end" type="datetime-local" id="screening_end" class="form-control" />
                            </div>
                            @Html.ValidationMessageFor(model => model.ScreeningEnd, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
                @Html.LabelFor(model => model.ScreeningStart, htmlAttributes: new { @class = "control-label col-md-2 mt-3 text-no-wrap" })
                <div class="col-md-10">
                    <div class="input-group" id="datetimepicker">
                        @Html.EditorFor(model => model.ScreeningStart, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "true" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.ScreeningStart, "", new { @class = "text-danger" })
                </div>
            </div>*@

                    @*<div class="form-group">
                @Html.LabelFor(m => m.ScreeningStart, new { @class = "mt-3 col-md-2 control-label text-no-wrap" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.ScreeningStart, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ScreeningEnd, new { @class = "mt-3 col-md-2 control-label text-no-wrap" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.ScreeningEnd, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>*@

                    @Html.HiddenFor(m => m.Id)
                    <div class="form-group">
                        <div class="col-md-offset-2 mt-5 mb-5 col-md-10">
                            @if (Model.Id == 0)
                            {
                                <button type="submit" class="btn btn-primary btn-lg w-100"><i class="fa-solid fa-plus"></i> @Model.State</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary btn-lg w-100"><i class="fa-solid fa-floppy-disk"></i> @Model.State</button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")

    <script src="~/Scripts/jquery-ui-1.13.1.min.js"></script>

    <script>
        $(document).ready(function ()
        {
            @*$('#screening_start').datepicker(
                {
                    defaultDate: '@DateTime.Now.ToString("DD-MM-YYYY HH:mm")',
                    showTodayButton: true,
                    format: 'DD-MM-YYYY HH:mm',
                    dateFormat: "DD-MM-YYYY",
                    timeFormat: 'HH:mm',
                    showClose: true,
                    showClear: true,
                    toolbarPlacement: 'top',
                    stepping: 15,
                });*@

            var now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());

            document.getElementById('screening_start').value = now.toISOString().slice(0, 16);
            document.getElementById('screening_end').value = now.toISOString().slice(0, 16);
        });

    </script>

}
